module JaLC
  interface _Logger
  end

  VERSION: String

  module Registration
    def self.configure: { (Config) -> void } -> void
    def self.config: -> Config

    class Error < StandardError
    end
    
    class RegistrationError < Error
    end
    
    class AuthenticationError < RegistrationError
    end
    
    class InvalidXMLError < RegistrationError
    end

    class Client
      interface _IO
      end
      type rexml_document = untyped

      def initialize: (Config config) -> void
      def post: (_IO xml_file) -> rexml_document
      def get_result: (Integer | String exec_id) -> rexml_document
    end

    class Config
      DEFAULT_BASE_URL: String
      
      attr_accessor id: String?
      attr_accessor password: String?
      attr_accessor logger: _Logger?
      
      def initialize: -> void
    end
  end

  module REST
    type response_body = Hash[String, untyped] | String | nil

    def self.configure: { (Config) -> void } -> void
    def self.config: -> Config

    class Error < StandardError
    end
    
    class HTTPError < Error
      type response_hash = {status: Integer, headers: Hash[String, String], body: response_body, request: {method: Symbol, url: URI, headers: Hash[String, String], body: String?}}

      attr_reader response: response_hash?

      def initialize: (?String? msg, ?response: response_hash?) -> void
      def inspect: -> String
    end

    class ClientError < HTTPError
    end
    
    class BadRequestError < ClientError
    end
    
    class ResourceNotFound < ClientError
    end
    
    class ServerError < HTTPError
    end
    
    class Client
      def initialize: (Config config) -> void
      def prefixes: (?ra: String?, ?sort: String?, ?order: String?) -> response_body
      def doilist: (String prefix, ?from: String?, ?to: String?, ?rows: Integer? | String?, ?page: Integer? | String?, ?sort: String?, ?order: String?) -> response_body
      def doi: (String doi) -> response_body
    end

    class Config
      DEFAULT_BASE_URL: String
      
      attr_accessor logger: _Logger?
      
      def initialize: -> void
    end
  end
end
